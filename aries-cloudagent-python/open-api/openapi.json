{
  "swagger" : "2.0",
  "info" : {
    "version" : "v0.5.6",
    "title" : "Aries Cloud Agent"
  },
  "tags" : [ {
    "name" : "action-menu",
    "description" : "Menu interaction over connection"
  }, {
    "name" : "basicmessage",
    "description" : "Simple messaging",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0095-basic-message"
    }
  }, {
    "name" : "connection",
    "description" : "Connection management",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/9b0aaa39df7e8bd434126c4b33c097aae78d65bf/features/0160-connection-protocol"
    }
  }, {
    "name" : "credential-definition",
    "description" : "Credential definition operations",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#cred_def"
    }
  }, {
    "name" : "credentials",
    "description" : "Holder credential management",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://w3c.github.io/vc-data-model/#credentials"
    }
  }, {
    "name" : "introduction",
    "description" : "Introduction of known parties"
  }, {
    "name" : "issue-credential",
    "description" : "Credential issue, revocation",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/bb42a6c35e0d5543718fb36dd099551ab192f7b0/features/0036-issue-credential"
    }
  }, {
    "name" : "ledger",
    "description" : "Interaction with ledger",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://hyperledger-indy.readthedocs.io/projects/plenum/en/latest/storage.html#ledger"
    }
  }, {
    "name" : "out-of-band",
    "description" : "Out-of-band connections",
    "externalDocs" : {
      "description" : "Design",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/2da7fc4ee043effa3a9960150e7ba8c9a4628b68/features/0434-outofband"
    }
  }, {
    "name" : "present-proof",
    "description" : "Proof presentation",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/4fae574c03f9f1013db30bf2c0c676b1122f7149/features/0037-present-proof"
    }
  }, {
    "name" : "revocation",
    "description" : "Revocation registry management",
    "externalDocs" : {
      "description" : "Overview",
      "url" : "https://github.com/hyperledger/indy-hipe/tree/master/text/0011-cred-revocation"
    }
  }, {
    "name" : "schema",
    "description" : "Schema operations",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#schema"
    }
  }, {
    "name" : "server",
    "description" : "Feature discovery",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/9b7ab9814f2e7d1108f74aca6f3d2e5d62899473/features/0031-discover-features"
    }
  }, {
    "name" : "trustping",
    "description" : "Trust-ping over connection",
    "externalDocs" : {
      "description" : "Specification",
      "url" : "https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0048-trust-ping"
    }
  }, {
    "name" : "wallet",
    "description" : "DID and tag policy management",
    "externalDocs" : {
      "description" : "Design",
      "url" : "https://github.com/hyperledger/indy-sdk/tree/master/docs/design/003-wallet-storage"
    }
  } ],
  "paths" : {
    "/plugins" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Fetch the list of loaded plugins",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/AdminModules"
            }
          }
        }
      }
    },
    "/status" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Fetch the server status",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/AdminStatus"
            }
          }
        }
      }
    },
    "/status/reset" : {
      "post" : {
        "tags" : [ "server" ],
        "summary" : "Reset statistics",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/AdminStatus"
            }
          }
        }
      }
    },
    "/status/live" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Liveliness check",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/AdminStatusLiveliness"
            }
          }
        }
      }
    },
    "/status/ready" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Readiness check",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/AdminStatusReadiness"
            }
          }
        }
      }
    },
    "/shutdown" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Shut down server",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : { }
      }
    },
    "/features" : {
      "get" : {
        "tags" : [ "server" ],
        "summary" : "Query supported features",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/QueryResult"
            }
          }
        }
      }
    },
    "/present-proof/records" : {
      "get" : {
        "tags" : [ "present-proof" ],
        "summary" : "Fetch all present-proof exchange records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role assigned in presentation exchange",
          "required" : false,
          "type" : "string",
          "enum" : [ "prover", "verifier" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Presentation exchange state",
          "required" : false,
          "type" : "string",
          "enum" : [ "proposal_sent", "proposal_received", "request_sent", "request_received", "presentation_sent", "presentation_received", "verified", "presentation_acked" ]
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "Thread identifier",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchangeList"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}" : {
      "get" : {
        "tags" : [ "present-proof" ],
        "summary" : "Fetch a single presentation exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "present-proof" ],
        "summary" : "Remove an existing presentation exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : { }
      }
    },
    "/present-proof/records/{pres_ex_id}/credentials" : {
      "get" : {
        "tags" : [ "present-proof" ],
        "summary" : "Fetch credentials for a presentation request from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum number to retrieve",
          "required" : false,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "extra_query",
          "in" : "query",
          "description" : "(JSON) object mapping referents to extra WQL queries",
          "required" : false,
          "type" : "string",
          "pattern" : "^{\\s*\".*?\"\\s*:\\s*{.*?}\\s*(,\\s*\".*?\"\\s*:\\s*{.*?}\\s*)*\\s*}$"
        }, {
          "name" : "referent",
          "in" : "query",
          "description" : "Proof request referents of interest, comma-separated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start index",
          "required" : false,
          "type" : "integer",
          "minimum" : 0,
          "format" : "int32"
        } ],
        "responses" : { }
      }
    },
    "/present-proof/send-proposal" : {
      "post" : {
        "tags" : [ "present-proof" ],
        "summary" : "Sends a presentation proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationProposalRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/create-request" : {
      "post" : {
        "tags" : [ "present-proof" ],
        "summary" : "\n    Creates a presentation request not bound to any proposal or existing connection\n    ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationCreateRequestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/send-request" : {
      "post" : {
        "tags" : [ "present-proof" ],
        "summary" : "Sends a free presentation request not bound to any proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationSendRequestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/send-request" : {
      "post" : {
        "tags" : [ "present-proof" ],
        "summary" : "Sends a presentation request in reference to a proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationSendRequestRequest"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/send-presentation" : {
      "post" : {
        "tags" : [ "present-proof" ],
        "summary" : "Sends a proof presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10PresentationRequest"
          }
        }, {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/present-proof/records/{pres_ex_id}/verify-presentation" : {
      "post" : {
        "tags" : [ "present-proof" ],
        "summary" : "Verify a received presentation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pres_ex_id",
          "in" : "path",
          "description" : "Presentation exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10PresentationExchange"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/send-ping" : {
      "post" : {
        "tags" : [ "trustping" ],
        "summary" : "Send a trust ping to a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PingRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/PingRequestResponse"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/start-introduction" : {
      "post" : {
        "tags" : [ "introduction" ],
        "summary" : "Start an introduction between two connections",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "target_connection_id",
          "in" : "query",
          "description" : "Target connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "message",
          "in" : "query",
          "description" : "Message",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/out-of-band/create-invitation" : {
      "post" : {
        "tags" : [ "out-of-band" ],
        "summary" : "Create a new connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InvitationCreateRequest"
          }
        } ],
        "responses" : { }
      }
    },
    "/out-of-band/receive-invitation" : {
      "post" : {
        "tags" : [ "out-of-band" ],
        "summary" : "Create a new connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InvitationReceiveRequest"
          }
        } ],
        "responses" : { }
      }
    },
    "/connections" : {
      "get" : {
        "tags" : [ "connection" ],
        "summary" : "Query agent-to-agent connections",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "initiator",
          "in" : "query",
          "description" : "Connection initiator",
          "required" : false,
          "type" : "string",
          "enum" : [ "self", "external" ]
        }, {
          "name" : "invitation_key",
          "in" : "query",
          "description" : "invitation key",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }, {
          "name" : "my_did",
          "in" : "query",
          "description" : "My DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Connection state",
          "required" : false,
          "type" : "string",
          "enum" : [ "init", "invitation", "request", "response", "active", "error", "inactive" ]
        }, {
          "name" : "their_did",
          "in" : "query",
          "description" : "Their DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "their_role",
          "in" : "query",
          "description" : "Their assigned connection role",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/ConnectionList"
            }
          }
        }
      }
    },
    "/connections/{conn_id}" : {
      "get" : {
        "tags" : [ "connection" ],
        "summary" : "Fetch a single connection record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/ConnectionRecord"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "connection" ],
        "summary" : "Remove an existing connection record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/connections/create-static" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Create a new static connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConnectionStaticRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/ConnectionStaticResult"
            }
          }
        }
      }
    },
    "/connections/create-invitation" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Create a new connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "auto_accept",
          "in" : "query",
          "description" : "Auto-accept connection (default as per configuration)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "multi_use",
          "in" : "query",
          "description" : "Create invitation for multiple use (default false)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "public",
          "in" : "query",
          "description" : "Create invitation from public DID (default false)",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/InvitationResult"
            }
          }
        }
      }
    },
    "/connections/receive-invitation" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Receive a new connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReceiveInvitationRequest"
          }
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "auto_accept",
          "in" : "query",
          "description" : "Auto-accept connection (defaults to configuration)",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/ConnectionRecord"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/accept-invitation" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Accept a stored connection invitation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "my_endpoint",
          "in" : "query",
          "description" : "My URL endpoint",
          "required" : false,
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }, {
          "name" : "my_label",
          "in" : "query",
          "description" : "Label for connection",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/ConnectionRecord"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/accept-request" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Accept a stored connection request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "my_endpoint",
          "in" : "query",
          "description" : "My URL endpoint",
          "required" : false,
          "type" : "string",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/ConnectionRecord"
            }
          }
        }
      }
    },
    "/connections/{conn_id}/establish-inbound/{ref_id}" : {
      "post" : {
        "tags" : [ "connection" ],
        "summary" : "Assign another connection as the inbound connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ref_id",
          "in" : "path",
          "description" : "Inbound connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/issue-credential/records" : {
      "get" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Fetch all credential exchange records",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connection_id",
          "in" : "query",
          "description" : "Connection identifier",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role assigned in credential exchange",
          "required" : false,
          "type" : "string",
          "enum" : [ "issuer", "holder" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Credential exchange state",
          "required" : false,
          "type" : "string",
          "enum" : [ "proposal_sent", "proposal_received", "offer_sent", "offer_received", "request_sent", "request_received", "credential_issued", "credential_received", "credential_acked" ]
        }, {
          "name" : "thread_id",
          "in" : "query",
          "description" : "Thread identifier",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchangeListResult"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}" : {
      "get" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Fetch a single credential exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Remove an existing credential exchange record",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : { }
      }
    },
    "/issue-credential/create" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send holder a credential, automating entire flow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/send" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send holder a credential, automating entire flow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialProposalRequestMand"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/send-proposal" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send issuer a credential proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialProposalRequestOpt"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/send-offer" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send holder a credential offer, independent of any proposal",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialOfferRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/send-offer" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send holder a credential offer in reference to a proposal with preview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/send-request" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send issuer a credential request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/issue" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send holder a credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialIssueRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/store" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Store a received credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialStoreRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/V10CredentialExchange"
            }
          }
        }
      }
    },
    "/issue-credential/records/{cred_ex_id}/problem-report" : {
      "post" : {
        "tags" : [ "issue-credential" ],
        "summary" : "Send a problem report for credential exchange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/V10CredentialProblemReportRequest"
          }
        }, {
          "name" : "cred_ex_id",
          "in" : "path",
          "description" : "Credential exchange identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        } ],
        "responses" : { }
      }
    },
    "/action-menu/{conn_id}/close" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Close the active menu associated with a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/action-menu/{conn_id}/fetch" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Fetch the active menu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/action-menu/{conn_id}/perform" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Perform an action associated with the active menu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PerformRequest"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/action-menu/{conn_id}/request" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Request the active menu",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/action-menu/{conn_id}/send-menu" : {
      "post" : {
        "tags" : [ "action-menu" ],
        "summary" : "Send an action menu to a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SendMenu"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/connections/{conn_id}/send-message" : {
      "post" : {
        "tags" : [ "basicmessage" ],
        "summary" : "Send a basic message to a connection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SendMessage"
          }
        }, {
          "name" : "conn_id",
          "in" : "path",
          "description" : "Connection identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/credential/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Fetch a credential from wallet by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredBrief"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "credentials" ],
        "summary" : "Remove a credential from the wallet by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/credential/revoked/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Query credential revocation status by id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Earliest epoch of revocation status interval of interest",
          "required" : false,
          "type" : "integer",
          "minimum" : 0,
          "format" : "int32"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Latest epoch of revocation status interval of interest",
          "required" : false,
          "type" : "integer",
          "minimum" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredRevokedResult"
            }
          }
        }
      }
    },
    "/credential/mime-types/{credential_id}" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Get attribute MIME types from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "credential_id",
          "in" : "path",
          "description" : "Credential identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/AttributeMimeTypesResult"
            }
          }
        }
      }
    },
    "/credentials" : {
      "get" : {
        "tags" : [ "credentials" ],
        "summary" : "Fetch credentials from wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum number to retrieve",
          "required" : false,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start index",
          "required" : false,
          "type" : "integer",
          "minimum" : 0,
          "format" : "int32"
        }, {
          "name" : "wql",
          "in" : "query",
          "description" : "(JSON) WQL query",
          "required" : false,
          "type" : "string",
          "pattern" : "^{.*}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredBriefList"
            }
          }
        }
      }
    },
    "/ledger/register-nym" : {
      "post" : {
        "tags" : [ "ledger" ],
        "summary" : "Send a NYM registration to the ledger.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID to register",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "verkey",
          "in" : "query",
          "description" : "Verification key",
          "required" : true,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "Alias",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Role",
          "required" : false,
          "type" : "string",
          "enum" : [ "STEWARD", "TRUSTEE", "ENDORSER", "NETWORK_MONITOR", "reset" ]
        } ],
        "responses" : { }
      }
    },
    "/ledger/get-nym-role" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Get the role from the NYM registration of a public DID.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : { }
      }
    },
    "/ledger/rotate-public-did-keypair" : {
      "patch" : {
        "tags" : [ "ledger" ],
        "summary" : "Rotate key pair for public DID.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : { }
      }
    },
    "/ledger/did-verkey" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Get the verkey for a DID from the ledger.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : { }
      }
    },
    "/ledger/did-endpoint" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Get the endpoint for a DID from the ledger.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "endpoint_type",
          "in" : "query",
          "description" : "Endpoint type of interest (default 'Endpoint')",
          "required" : false,
          "type" : "string",
          "enum" : [ "Endpoint", "Profile", "LinkedDomains" ]
        } ],
        "responses" : { }
      }
    },
    "/ledger/taa" : {
      "get" : {
        "tags" : [ "ledger" ],
        "summary" : "Fetch the current transaction author agreement, if any",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/TAAResult"
            }
          }
        }
      }
    },
    "/ledger/taa/accept" : {
      "post" : {
        "tags" : [ "ledger" ],
        "summary" : "Accept the transaction author agreement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TAAAccept"
          }
        } ],
        "responses" : { }
      }
    },
    "/credential-definitions" : {
      "post" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Sends a credential definition to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialDefinitionSendRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredentialDefinitionSendResults"
            }
          }
        }
      }
    },
    "/credential-definitions/created" : {
      "get" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Search for matching credential definitions that agent originated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "query",
          "description" : "Credential definition id",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }, {
          "name" : "issuer_did",
          "in" : "query",
          "description" : "Issuer DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "schema_id",
          "in" : "query",
          "description" : "Schema identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }, {
          "name" : "schema_issuer_did",
          "in" : "query",
          "description" : "Schema issuer DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "schema_name",
          "in" : "query",
          "description" : "Schema name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_version",
          "in" : "query",
          "description" : "Schema version",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredentialDefinitionsCreatedResults"
            }
          }
        }
      }
    },
    "/credential-definitions/{cred_def_id}" : {
      "get" : {
        "tags" : [ "credential-definition" ],
        "summary" : "Gets a credential definition from the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredentialDefinitionGetResults"
            }
          }
        }
      }
    },
    "/schemas" : {
      "post" : {
        "tags" : [ "schema" ],
        "summary" : "Sends a schema to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SchemaSendRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/SchemaSendResults"
            }
          }
        }
      }
    },
    "/schemas/created" : {
      "get" : {
        "tags" : [ "schema" ],
        "summary" : "Search for matching schema that agent originated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_id",
          "in" : "query",
          "description" : "Schema identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }, {
          "name" : "schema_issuer_did",
          "in" : "query",
          "description" : "Schema issuer DID",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "schema_name",
          "in" : "query",
          "description" : "Schema name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "schema_version",
          "in" : "query",
          "description" : "Schema version",
          "required" : false,
          "type" : "string",
          "pattern" : "^[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/SchemasCreatedResults"
            }
          }
        }
      }
    },
    "/schemas/{schema_id}" : {
      "get" : {
        "tags" : [ "schema" ],
        "summary" : "Gets a schema from the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "schema_id",
          "in" : "path",
          "description" : "Schema identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/SchemaGetResults"
            }
          }
        }
      }
    },
    "/revocation/revoke" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Revoke an issued credential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevokeRequest"
          }
        } ],
        "responses" : { }
      }
    },
    "/revocation/publish-revocations" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Publish pending revocations to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PublishRevocations"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/PublishRevocations"
            }
          }
        }
      }
    },
    "/revocation/clear-pending-revocations" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Clear pending revocations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClearPendingRevocationsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/PublishRevocations"
            }
          }
        }
      }
    },
    "/revocation/credential-record" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get credential revocation status",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_ex_id",
          "in" : "query",
          "description" : "Credential exchange identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        }, {
          "name" : "cred_rev_id",
          "in" : "query",
          "description" : "Credential revocation identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^[1-9][0-9]*$"
        }, {
          "name" : "rev_reg_id",
          "in" : "query",
          "description" : "Revocation registry identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/CredRevRecordResult"
            }
          }
        }
      }
    },
    "/revocation/registries/created" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Search for matching revocation registries that current agent created",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "query",
          "description" : "Credential definition identifier",
          "required" : false,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Revocation registry state",
          "required" : false,
          "type" : "string",
          "enum" : [ "init", "generated", "posted", "active", "full" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegsCreated"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get revocation registry by revocation registry id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "revocation" ],
        "summary" : "Update revocation registry with new public URI to its tails file",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevRegUpdateTailsFileUri"
          }
        }, {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/active-registry/{cred_def_id}" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get current active revocation registry by credential definition id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cred_def_id",
          "in" : "path",
          "description" : "Credential definition identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/issued" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Get number of credentials issued against revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegIssuedResult"
            }
          }
        }
      }
    },
    "/revocation/create-registry" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Creates a new revocation registry",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RevRegCreateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/definition" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Send revocation registry definition to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/entry" : {
      "post" : {
        "tags" : [ "revocation" ],
        "summary" : "Send revocation registry entry to ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/revocation/registry/{rev_reg_id}/tails-file" : {
      "get" : {
        "tags" : [ "revocation" ],
        "summary" : "Download tails file",
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : {
          "200" : {
            "description" : "tails file",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "revocation" ],
        "summary" : "Upload local tails file to server",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        } ],
        "responses" : { }
      }
    },
    "/revocation/registry/{rev_reg_id}/set-state" : {
      "patch" : {
        "tags" : [ "revocation" ],
        "summary" : "Set revocation registry state manually",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rev_reg_id",
          "in" : "path",
          "description" : "Revocation Registry identifier",
          "required" : true,
          "type" : "string",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Revocation registry state to set",
          "required" : true,
          "type" : "string",
          "enum" : [ "init", "generated", "posted", "active", "full" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/RevRegResult"
            }
          }
        }
      }
    },
    "/wallet/did" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "List wallet DIDs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : false,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        }, {
          "name" : "posture",
          "in" : "query",
          "description" : "Whether DID is current public DID, posted to ledger but current public DID, or local to the wallet",
          "required" : false,
          "type" : "string",
          "enum" : [ "public", "posted", "wallet_only" ]
        }, {
          "name" : "verkey",
          "in" : "query",
          "description" : "Verification key of interest",
          "required" : false,
          "type" : "string",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/DIDList"
            }
          }
        }
      }
    },
    "/wallet/did/create" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Create a local DID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/DIDResult"
            }
          }
        }
      }
    },
    "/wallet/did/public" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "Fetch the current public DID",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/DIDResult"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Assign the current public DID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/DIDResult"
            }
          }
        }
      }
    },
    "/wallet/set-did-endpoint" : {
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "Update endpoint in wallet and on ledger if posted to it",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DIDEndpointWithType"
          }
        } ],
        "responses" : { }
      }
    },
    "/wallet/get-did-endpoint" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "Query DID endpoint in wallet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : {
          "200" : {
            "description" : "null",
            "schema" : {
              "$ref" : "#/definitions/DIDEndpoint"
            }
          }
        }
      }
    },
    "/wallet/did/local/rotate-keypair" : {
      "patch" : {
        "tags" : [ "wallet" ],
        "summary" : "Rotate keypair for a DID not posted to the ledger",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "description" : "DID of interest",
          "required" : true,
          "type" : "string",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        } ],
        "responses" : { }
      }
    }
  },
  "definitions" : {
    "AMLRecord" : {
      "type" : "object",
      "properties" : {
        "aml" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "amlContext" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "AdminModules" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "List of admin modules",
          "items" : {
            "type" : "string",
            "description" : "admin module"
          }
        }
      }
    },
    "AdminStatus" : {
      "type" : "object"
    },
    "AdminStatusLiveliness" : {
      "type" : "object",
      "properties" : {
        "alive" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Liveliness status"
        }
      }
    },
    "AdminStatusReadiness" : {
      "type" : "object",
      "properties" : {
        "ready" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Readiness status"
        }
      }
    },
    "AttachDecorator" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Attachment identifier"
        },
        "byte_count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1234,
          "description" : "Byte count of data included by reference"
        },
        "data" : {
          "$ref" : "#/definitions/AttachDecoratorData"
        },
        "description" : {
          "type" : "string",
          "example" : "view from doorway, facing east, with lights off",
          "description" : "Human-readable description of content"
        },
        "filename" : {
          "type" : "string",
          "example" : "IMG1092348.png",
          "description" : "File name"
        },
        "lastmod_time" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Hint regarding last modification datetime, in ISO-8601 format",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "mime-type" : {
          "type" : "string",
          "example" : "image/png",
          "description" : "MIME type"
        }
      }
    },
    "AttachDecoratorData" : {
      "type" : "object",
      "properties" : {
        "base64" : {
          "type" : "string",
          "example" : "ey4uLn0=",
          "description" : "Base64-encoded data",
          "pattern" : "^[a-zA-Z0-9+/]*={0,2}$"
        },
        "json" : {
          "type" : "object",
          "example" : "{\"sample\": \"content\"}",
          "description" : "JSON-serialized data",
          "properties" : { }
        },
        "jws" : {
          "$ref" : "#/definitions/AttachDecoratorData_jws"
        },
        "links" : {
          "type" : "array",
          "description" : "List of hypertext links to data",
          "items" : {
            "type" : "string",
            "example" : "https://link.to/data"
          }
        },
        "sha256" : {
          "type" : "string",
          "example" : "617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb",
          "description" : "SHA256 hash (binhex encoded) of content",
          "pattern" : "^[a-fA-F0-9+/]{64}$"
        }
      }
    },
    "AttachDecoratorData1JWS" : {
      "type" : "object",
      "required" : [ "header", "signature" ],
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/AttachDecoratorDataJWSHeader"
        },
        "protected" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "protected JWS header",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        },
        "signature" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "signature",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        }
      }
    },
    "AttachDecoratorDataJWS" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/AttachDecoratorDataJWSHeader"
        },
        "protected" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "protected JWS header",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        },
        "signature" : {
          "type" : "string",
          "example" : "ey4uLn0",
          "description" : "signature",
          "pattern" : "^[-_a-zA-Z0-9]*$"
        },
        "signatures" : {
          "type" : "array",
          "description" : "List of signatures",
          "items" : {
            "$ref" : "#/definitions/AttachDecoratorData1JWS"
          }
        }
      }
    },
    "AttachDecoratorDataJWSHeader" : {
      "type" : "object",
      "required" : [ "kid" ],
      "properties" : {
        "kid" : {
          "type" : "string",
          "example" : "did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4",
          "description" : "Key identifier, in W3C did:key or DID URL format",
          "pattern" : "^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\\?.*)?#.+)$"
        }
      }
    },
    "AttachmentDef" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "AttributeMimeTypesResult" : {
      "type" : "object"
    },
    "ClearPendingRevocationsRequest" : {
      "type" : "object",
      "properties" : {
        "purge" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id: omit for all, specify null or empty list for all pending per revocation registry",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        }
      }
    },
    "ConnectionInvitation" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type",
          "readOnly" : true
        },
        "did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "DID for connection invitation",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "imageUrl" : {
          "type" : "string",
          "format" : "url",
          "example" : "http://192.168.56.101/img/logo.jpg",
          "description" : "Optional image URL for connection invitation",
          "x-nullable" : true
        },
        "label" : {
          "type" : "string",
          "example" : "Bob",
          "description" : "Optional label for connection"
        },
        "recipientKeys" : {
          "type" : "array",
          "description" : "List of recipient keys",
          "items" : {
            "type" : "string",
            "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
            "description" : "Recipient public key",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          }
        },
        "routingKeys" : {
          "type" : "array",
          "description" : "List of routing keys",
          "items" : {
            "type" : "string",
            "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
            "description" : "Routing key",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          }
        },
        "serviceEndpoint" : {
          "type" : "string",
          "example" : "http://192.168.56.101:8020",
          "description" : "Service endpoint at which to reach this agent"
        }
      }
    },
    "ConnectionList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "List of connection records",
          "items" : {
            "$ref" : "#/definitions/ConnectionRecord"
          }
        }
      }
    },
    "ConnectionRecord" : {
      "type" : "object",
      "properties" : {
        "accept" : {
          "type" : "string",
          "example" : "auto",
          "description" : "Connection acceptance: manual or auto",
          "enum" : [ "manual", "auto" ]
        },
        "alias" : {
          "type" : "string",
          "example" : "Bob, providing quotes",
          "description" : "Optional alias to apply to connection for later use"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "No DIDDoc provided; cannot connect to public DID",
          "description" : "Error message"
        },
        "inbound_connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Inbound routing connection id to use"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Connection initiator: self, external, or multiuse",
          "enum" : [ "self", "external", "multiuse" ]
        },
        "invitation_key" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Public key for connection",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        },
        "invitation_mode" : {
          "type" : "string",
          "example" : "once",
          "description" : "Invitation mode: once, multi, or static",
          "enum" : [ "once", "multi", "static" ]
        },
        "my_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Our DID for connection",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "request_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection request identifier"
        },
        "routing_state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Routing state of connection"
        },
        "state" : {
          "type" : "string",
          "example" : "active",
          "description" : "Current record state"
        },
        "their_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Their DID for connection",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "their_label" : {
          "type" : "string",
          "example" : "Bob",
          "description" : "Their label for connection"
        },
        "their_role" : {
          "type" : "string",
          "example" : "Point of contact",
          "description" : "Their assigned role for connection"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "ConnectionStaticRequest" : {
      "type" : "object",
      "properties" : {
        "alias" : {
          "type" : "string",
          "description" : "Alias to assign to this connection"
        },
        "my_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Local DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "my_seed" : {
          "type" : "string",
          "description" : "Seed to use for the local DID"
        },
        "their_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Remote DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "their_endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "URL endpoint for the other party",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "their_label" : {
          "type" : "string",
          "description" : "Label to assign to this connection"
        },
        "their_role" : {
          "type" : "string",
          "example" : "Point of contact",
          "description" : "Role to assign to this connection"
        },
        "their_seed" : {
          "type" : "string",
          "description" : "Seed to use for the remote DID"
        },
        "their_verkey" : {
          "type" : "string",
          "description" : "Remote verification key"
        }
      }
    },
    "ConnectionStaticResult" : {
      "type" : "object",
      "required" : [ "mv_verkey", "my_did", "my_endpoint", "record", "their_did", "their_verkey" ],
      "properties" : {
        "mv_verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "My verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        },
        "my_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Local DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "my_endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "My URL endpoint",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "record" : {
          "$ref" : "#/definitions/ConnectionRecord"
        },
        "their_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Remote DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "their_verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Remote verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }
      }
    },
    "CredAttrSpec" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "mime-type" : {
          "type" : "string",
          "example" : "image/jpeg",
          "description" : "MIME type: omit for (null) default",
          "x-nullable" : true
        },
        "name" : {
          "type" : "string",
          "example" : "favourite_drink",
          "description" : "Attribute name"
        },
        "value" : {
          "type" : "string",
          "example" : "martini",
          "description" : "Attribute value: base64-encode if MIME type is present"
        }
      }
    },
    "CredBrief" : {
      "type" : "object",
      "properties" : {
        "attrs" : {
          "type" : "object",
          "description" : "Attribute names mapped to their raw values",
          "additionalProperties" : {
            "type" : "string",
            "description" : "Attribute value"
          }
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier",
          "pattern" : "^[1-9][0-9]*$"
        },
        "referent" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential referent"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }
      }
    },
    "CredBriefList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CredBrief"
          }
        }
      }
    },
    "CredRevRecordResult" : {
      "type" : "object"
    },
    "CredRevokedResult" : {
      "type" : "object",
      "properties" : {
        "revoked" : {
          "type" : "boolean",
          "description" : "Whether credential is revoked on the ledger"
        }
      }
    },
    "CredentialDefinition" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "schemaId" : {
          "type" : "string",
          "example" : "20",
          "description" : "Schema identifier within credential definition identifier"
        },
        "tag" : {
          "type" : "string",
          "example" : "tag",
          "description" : "Tag within credential definition identifier"
        },
        "type" : {
          "example" : "CL",
          "description" : "Signature type: CL for Camenisch-Lysyanskaya"
        },
        "value" : {
          "type" : "object",
          "description" : "Credential definition primary and revocation values",
          "properties" : { }
        },
        "ver" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Node protocol version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "CredentialDefinitionGetResults" : {
      "type" : "object",
      "properties" : {
        "credential_definition" : {
          "$ref" : "#/definitions/CredentialDefinition"
        }
      }
    },
    "CredentialDefinitionSendRequest" : {
      "type" : "object",
      "properties" : {
        "revocation_registry_size" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "Revocation registry size",
          "minimum" : 4,
          "maximum" : 32768
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "support_revocation" : {
          "type" : "boolean",
          "description" : "Revocation supported flag"
        },
        "tag" : {
          "type" : "string",
          "example" : "default",
          "description" : "Credential definition identifier tag"
        }
      }
    },
    "CredentialDefinitionSendResults" : {
      "type" : "object",
      "properties" : {
        "credential_definition_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        }
      }
    },
    "CredentialDefinitionsCreatedResults" : {
      "type" : "object",
      "properties" : {
        "credential_definition_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
            "description" : "Credential definition identifiers",
            "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
          }
        }
      }
    },
    "CredentialPreview" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "@type" : {
          "type" : "string",
          "example" : "issue-credential/1.0/credential-preview",
          "description" : "Message type identifier"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CredAttrSpec"
          }
        }
      }
    },
    "DID" : {
      "type" : "object",
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of interest",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "posture" : {
          "type" : "string",
          "example" : "wallet_only",
          "description" : "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet",
          "enum" : [ "public", "posted", "wallet_only" ]
        },
        "verkey" : {
          "type" : "string",
          "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
          "description" : "Public verification key",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        }
      }
    },
    "DIDEndpoint" : {
      "type" : "object",
      "required" : [ "did" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of interest",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "Endpoint to set (omit to delete)",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        }
      }
    },
    "DIDEndpointWithType" : {
      "type" : "object",
      "required" : [ "did" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "DID of interest",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "endpoint" : {
          "type" : "string",
          "example" : "https://myhost:8021",
          "description" : "Endpoint to set (omit to delete)",
          "pattern" : "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        },
        "endpoint_type" : {
          "type" : "string",
          "example" : "Endpoint",
          "description" : "Endpoint type to set (default 'Endpoint'); affects only public or posted DIDs",
          "enum" : [ "Endpoint", "Profile", "LinkedDomains" ]
        }
      }
    },
    "DIDList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "DID list",
          "items" : {
            "$ref" : "#/definitions/DID"
          }
        }
      }
    },
    "DIDResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/DID"
        }
      }
    },
    "IndyProofReqAttrSpec" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "favouriteDrink",
          "description" : "Attribute name"
        },
        "names" : {
          "type" : "array",
          "description" : "Attribute name group",
          "items" : {
            "type" : "string",
            "example" : "age"
          }
        },
        "non_revoked" : {
          "$ref" : "#/definitions/IndyProofReqNonRevoked"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag"
            }
          }
        }
      }
    },
    "IndyProofReqNonRevoked" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1604897087,
          "description" : "Earliest epoch of interest for non-revocation proof",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        },
        "to" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1604897087,
          "description" : "Latest epoch of interest for non-revocation proof",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyProofReqPredSpec" : {
      "type" : "object",
      "required" : [ "name", "p_type", "p_value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "index",
          "description" : "Attribute name"
        },
        "non_revoked" : {
          "$ref" : "#/definitions/IndyProofReqNonRevoked"
        },
        "p_type" : {
          "type" : "string",
          "example" : ">=",
          "description" : "Predicate type ('<', '<=', '>=', or '>')",
          "enum" : [ "<", "<=", ">=", ">" ]
        },
        "p_value" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Threshold value"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "If present, credential must satisfy one of given restrictions",
          "items" : {
            "$ref" : "#/definitions/IndyProofReqPredSpecRestrictions"
          }
        }
      }
    },
    "IndyProofReqPredSpecRestrictions" : {
      "type" : "object",
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Schema issuer (origin) DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "transcript",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "IndyProofRequest" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Proof request",
          "description" : "Proof request name"
        },
        "non_revoked" : {
          "$ref" : "#/definitions/IndyProofReqNonRevoked"
        },
        "nonce" : {
          "type" : "string",
          "example" : "1234567890",
          "description" : "Nonce"
        },
        "requested_attributes" : {
          "type" : "object",
          "description" : "Requested attribute specifications of proof request",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofReqAttrSpec"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Requested predicate specifications of proof request",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyProofReqPredSpec"
          }
        },
        "version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Proof request version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "IndyRequestedCredsRequestedAttr" : {
      "type" : "object",
      "required" : [ "cred_id", "revealed" ],
      "properties" : {
        "cred_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet credential identifier (typically but not necessarily a UUID)"
        },
        "revealed" : {
          "type" : "boolean",
          "description" : "Whether to reveal attribute in proof"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1604897087,
          "description" : "Epoch timestamp of interest for non-revocation proof",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "IndyRequestedCredsRequestedPred" : {
      "type" : "object",
      "required" : [ "cred_id" ],
      "properties" : {
        "cred_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Wallet credential identifier (typically but not necessarily a UUID)"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1604897087,
          "description" : "Epoch timestamp of interest for non-revocation proof",
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "InvitationCreateRequest" : {
      "type" : "object",
      "properties" : {
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttachmentDef"
          }
        },
        "include_handshake" : {
          "type" : "boolean"
        },
        "use_public_did" : {
          "type" : "boolean"
        }
      }
    },
    "InvitationReceiveRequest" : {
      "type" : "object",
      "required" : [ "request~attach" ],
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type",
          "readOnly" : true
        },
        "handshake_protocols" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "label" : {
          "type" : "string",
          "example" : "Bob",
          "description" : "Optional label"
        },
        "request~attach" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttachDecorator"
          }
        },
        "service" : { },
        "service_blocks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Service"
          }
        },
        "service_dids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "InvitationResult" : {
      "type" : "object",
      "properties" : {
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "invitation" : {
          "$ref" : "#/definitions/ConnectionInvitation"
        },
        "invitation_url" : {
          "type" : "string",
          "example" : "http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==",
          "description" : "Invitation URL"
        }
      }
    },
    "MenuForm" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Window preference settings",
          "description" : "Additional descriptive text for menu form"
        },
        "params" : {
          "type" : "array",
          "description" : "List of form parameters",
          "items" : {
            "$ref" : "#/definitions/MenuFormParam"
          }
        },
        "submit-label" : {
          "type" : "string",
          "example" : "Send",
          "description" : "Alternative label for form submit button"
        },
        "title" : {
          "type" : "string",
          "example" : "Preferences",
          "description" : "Menu form title"
        }
      }
    },
    "MenuFormParam" : {
      "type" : "object",
      "required" : [ "name", "title" ],
      "properties" : {
        "default" : {
          "type" : "string",
          "example" : "0",
          "description" : "Default parameter value"
        },
        "description" : {
          "type" : "string",
          "example" : "Delay in seconds before starting",
          "description" : "Additional descriptive text for menu form parameter"
        },
        "name" : {
          "type" : "string",
          "example" : "delay",
          "description" : "Menu parameter name"
        },
        "required" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether parameter is required"
        },
        "title" : {
          "type" : "string",
          "example" : "Delay in seconds",
          "description" : "Menu parameter title"
        },
        "type" : {
          "type" : "string",
          "example" : "int",
          "description" : "Menu form parameter input type"
        }
      }
    },
    "MenuJson" : {
      "type" : "object",
      "required" : [ "options" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "User preferences for window settings",
          "description" : "Introductory text for the menu"
        },
        "errormsg" : {
          "type" : "string",
          "example" : "Error: item not present",
          "description" : "Optional error message to display in menu header"
        },
        "options" : {
          "type" : "array",
          "description" : "List of menu options",
          "items" : {
            "$ref" : "#/definitions/MenuOption"
          }
        },
        "title" : {
          "type" : "string",
          "example" : "My Menu",
          "description" : "Menu title"
        }
      }
    },
    "MenuOption" : {
      "type" : "object",
      "required" : [ "name", "title" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Window display preferences",
          "description" : "Additional descriptive text for menu option"
        },
        "disabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to show option as disabled"
        },
        "form" : {
          "$ref" : "#/definitions/MenuForm"
        },
        "name" : {
          "type" : "string",
          "example" : "window_prefs",
          "description" : "Menu option name (unique identifier)"
        },
        "title" : {
          "type" : "string",
          "example" : "Window Preferences",
          "description" : "Menu option title"
        }
      }
    },
    "PerformRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Query",
          "description" : "Menu option name"
        },
        "params" : {
          "type" : "object",
          "description" : "Input parameter values",
          "additionalProperties" : {
            "type" : "string",
            "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        }
      }
    },
    "PingRequest" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Comment for the ping message",
          "x-nullable" : true
        }
      }
    },
    "PingRequestResponse" : {
      "type" : "object",
      "properties" : {
        "thread_id" : {
          "type" : "string",
          "description" : "Thread ID of the ping message"
        }
      }
    },
    "PresAttrSpec" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "mime-type" : {
          "type" : "string",
          "example" : "image/jpeg",
          "description" : "MIME type (default null)"
        },
        "name" : {
          "type" : "string",
          "example" : "favourite_drink",
          "description" : "Attribute name"
        },
        "referent" : {
          "type" : "string",
          "example" : "0",
          "description" : "Credential referent"
        },
        "value" : {
          "type" : "string",
          "example" : "martini",
          "description" : "Attribute value"
        }
      }
    },
    "PresPredSpec" : {
      "type" : "object",
      "required" : [ "name", "predicate", "threshold" ],
      "properties" : {
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "name" : {
          "type" : "string",
          "example" : "high_score",
          "description" : "Attribute name"
        },
        "predicate" : {
          "type" : "string",
          "example" : ">=",
          "description" : "Predicate type ('<', '<=', '>=', or '>')",
          "enum" : [ "<", "<=", ">=", ">" ]
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Threshold value"
        }
      }
    },
    "PresentationPreview" : {
      "type" : "object",
      "required" : [ "attributes", "predicates" ],
      "properties" : {
        "@type" : {
          "type" : "string",
          "example" : "did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview",
          "description" : "Message type identifier"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PresAttrSpec"
          }
        },
        "predicates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PresPredSpec"
          }
        }
      }
    },
    "PublishRevocations" : {
      "type" : "object",
      "properties" : {
        "rrid2crid" : {
          "type" : "object",
          "description" : "Credential revocation ids by revocation registry id",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "12345",
              "description" : "Credential revocation identifier",
              "pattern" : "^[1-9][0-9]*$"
            }
          }
        }
      }
    },
    "QueryResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "object",
          "description" : "Query results keyed by protocol",
          "additionalProperties" : {
            "type" : "object",
            "description" : "Protocol descriptor",
            "properties" : { }
          }
        }
      }
    },
    "ReceiveInvitationRequest" : {
      "type" : "object",
      "properties" : {
        "@id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Message identifier"
        },
        "@type" : {
          "type" : "string",
          "example" : "https://didcomm.org/my-family/1.0/my-message-type",
          "description" : "Message type",
          "readOnly" : true
        },
        "did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "DID for connection invitation",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "imageUrl" : {
          "type" : "string",
          "format" : "url",
          "example" : "http://192.168.56.101/img/logo.jpg",
          "description" : "Optional image URL for connection invitation",
          "x-nullable" : true
        },
        "label" : {
          "type" : "string",
          "example" : "Bob",
          "description" : "Optional label for connection"
        },
        "recipientKeys" : {
          "type" : "array",
          "description" : "List of recipient keys",
          "items" : {
            "type" : "string",
            "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
            "description" : "Recipient public key",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          }
        },
        "routingKeys" : {
          "type" : "array",
          "description" : "List of routing keys",
          "items" : {
            "type" : "string",
            "example" : "H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV",
            "description" : "Routing key",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          }
        },
        "serviceEndpoint" : {
          "type" : "string",
          "example" : "http://192.168.56.101:8020",
          "description" : "Service endpoint at which to reach this agent"
        }
      }
    },
    "RevRegCreateRequest" : {
      "type" : "object",
      "properties" : {
        "credential_definition_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "max_cred_num" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "Revocation registry size",
          "minimum" : 4,
          "maximum" : 32768
        }
      }
    },
    "RevRegIssuedResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Number of credentials issued against revocation registry",
          "minimum" : 0
        }
      }
    },
    "RevRegResult" : {
      "type" : "object"
    },
    "RevRegUpdateTailsFileUri" : {
      "type" : "object",
      "required" : [ "tails_public_uri" ],
      "properties" : {
        "tails_public_uri" : {
          "type" : "string",
          "format" : "url",
          "example" : "http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file",
          "description" : "Public URI to the tails file"
        }
      }
    },
    "RevRegsCreated" : {
      "type" : "object",
      "properties" : {
        "rev_reg_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
            "description" : "Revocation registry identifiers",
            "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
          }
        }
      }
    },
    "RevokeRequest" : {
      "type" : "object",
      "properties" : {
        "cred_ex_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier",
          "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        "cred_rev_id" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Credential revocation identifier",
          "pattern" : "^[1-9][0-9]*$"
        },
        "publish" : {
          "type" : "boolean",
          "description" : "(True) publish revocation to ledger immediately, or (default, False) mark it pending"
        },
        "rev_reg_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0",
          "description" : "Revocation registry identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        }
      }
    },
    "Schema" : {
      "type" : "object",
      "properties" : {
        "attrNames" : {
          "type" : "array",
          "description" : "Schema attribute names",
          "items" : {
            "type" : "string",
            "example" : "score",
            "description" : "Attribute name"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "name" : {
          "type" : "string",
          "example" : "schema_name",
          "description" : "Schema name"
        },
        "seqNo" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "Schema sequence number",
          "minimum" : 1
        },
        "ver" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Node protocol version",
          "pattern" : "^[0-9.]+$"
        },
        "version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "SchemaGetResults" : {
      "type" : "object",
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/Schema"
        }
      }
    },
    "SchemaSendRequest" : {
      "type" : "object",
      "required" : [ "attributes", "schema_name", "schema_version" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "description" : "List of schema attributes",
          "items" : {
            "type" : "string",
            "example" : "score",
            "description" : "attribute name"
          }
        },
        "schema_name" : {
          "type" : "string",
          "example" : "prefs",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        }
      }
    },
    "SchemaSendResults" : {
      "type" : "object",
      "required" : [ "schema", "schema_id" ],
      "properties" : {
        "schema" : {
          "type" : "object",
          "description" : "Schema result",
          "properties" : { }
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        }
      }
    },
    "SchemasCreatedResults" : {
      "type" : "object",
      "properties" : {
        "schema_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
            "description" : "Schema identifiers",
            "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
          }
        }
      }
    },
    "SendMenu" : {
      "type" : "object",
      "required" : [ "menu" ],
      "properties" : {
        "menu" : {
          "$ref" : "#/definitions/SendMenu_menu"
        }
      }
    },
    "SendMessage" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "string",
          "example" : "Hello",
          "description" : "Message content"
        }
      }
    },
    "Service" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "id" : {
          "type" : "string",
          "description" : ""
        },
        "recipientKeys" : {
          "type" : "array",
          "description" : "List of recipient keys",
          "items" : {
            "type" : "string",
            "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
            "description" : "Recipient public key",
            "pattern" : "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$"
          }
        },
        "routingKeys" : {
          "type" : "array",
          "description" : "List of routing keys",
          "items" : {
            "type" : "string",
            "example" : "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
            "description" : "Routing key",
            "pattern" : "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$"
          }
        },
        "serviceEndpoint" : {
          "type" : "string",
          "example" : "http://192.168.56.101:8020",
          "description" : "Service endpoint at which to reach this agent"
        },
        "type" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "TAAAccept" : {
      "type" : "object",
      "properties" : {
        "mechanism" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "TAAAcceptance" : {
      "type" : "object",
      "properties" : {
        "mechanism" : {
          "type" : "string"
        },
        "time" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1604897087,
          "minimum" : 0,
          "maximum" : 18446744073709551615
        }
      }
    },
    "TAAInfo" : {
      "type" : "object",
      "properties" : {
        "aml_record" : {
          "$ref" : "#/definitions/AMLRecord"
        },
        "taa_accepted" : {
          "$ref" : "#/definitions/TAAAcceptance"
        },
        "taa_record" : {
          "$ref" : "#/definitions/TAARecord"
        },
        "taa_required" : {
          "type" : "boolean"
        }
      }
    },
    "TAARecord" : {
      "type" : "object",
      "properties" : {
        "digest" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "TAAResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "$ref" : "#/definitions/TAAInfo"
        }
      }
    },
    "V10CredentialCreate" : {
      "type" : "object",
      "required" : [ "credential_proposal" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10CredentialExchange" : {
      "type" : "object",
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Issuer choice to issue to request in this credential exchange"
        },
        "auto_offer" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Holder choice to accept offer in this credential exchange"
        },
        "auto_remove" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Issuer choice to remove this credential exchange record when complete"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "credential" : {
          "type" : "object",
          "description" : "Credential as stored",
          "properties" : { }
        },
        "credential_definition_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_exchange_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential exchange identifier"
        },
        "credential_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Credential identifier"
        },
        "credential_offer" : {
          "type" : "object",
          "description" : "(Indy) credential offer",
          "properties" : { }
        },
        "credential_offer_dict" : {
          "type" : "object",
          "description" : "Serialized credential offer message",
          "properties" : { }
        },
        "credential_proposal_dict" : {
          "type" : "object",
          "description" : "Serialized credential proposal message",
          "properties" : { }
        },
        "credential_request" : {
          "type" : "object",
          "description" : "(Indy) credential request",
          "properties" : { }
        },
        "credential_request_metadata" : {
          "type" : "object",
          "description" : "(Indy) credential request metadata",
          "properties" : { }
        },
        "error_msg" : {
          "type" : "string",
          "example" : "credential definition identifier is not set in proposal",
          "description" : "Error message"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Issue-credential exchange initiator: self or external",
          "enum" : [ "self", "external" ]
        },
        "parent_thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Parent thread identifier"
        },
        "raw_credential" : {
          "type" : "object",
          "description" : "Credential as received, prior to storage in holder wallet",
          "properties" : { }
        },
        "revoc_reg_id" : {
          "type" : "string",
          "description" : "Revocation registry identifier"
        },
        "revocation_id" : {
          "type" : "string",
          "description" : "Credential identifier within revocation registry"
        },
        "role" : {
          "type" : "string",
          "example" : "issuer",
          "description" : "Issue-credential exchange role: holder or issuer",
          "enum" : [ "holder", "issuer" ]
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "state" : {
          "type" : "string",
          "example" : "credential_acked",
          "description" : "Issue-credential exchange state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        }
      }
    },
    "V10CredentialExchangeListResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "Aries#0036 v1.0 credential exchange records",
          "items" : {
            "$ref" : "#/definitions/V10CredentialExchange"
          }
        }
      }
    },
    "V10CredentialIssueRequest" : {
      "type" : "object",
      "properties" : {
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        }
      }
    },
    "V10CredentialOfferRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "cred_def_id", "credential_preview" ],
      "properties" : {
        "auto_issue" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to credential requests, creating and issuing requested credentials"
        },
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_preview" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10CredentialProblemReportRequest" : {
      "type" : "object",
      "required" : [ "explain_ltxt" ],
      "properties" : {
        "explain_ltxt" : {
          "type" : "string"
        }
      }
    },
    "V10CredentialProposalRequestMand" : {
      "type" : "object",
      "required" : [ "connection_id", "credential_proposal" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10CredentialProposalRequestOpt" : {
      "type" : "object",
      "required" : [ "connection_id" ],
      "properties" : {
        "auto_remove" : {
          "type" : "boolean",
          "description" : "Whether to remove the credential exchange record on completion (overrides --preserve-exchange-records configuration setting)"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "cred_def_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag",
          "description" : "Credential definition identifier",
          "pattern" : "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        },
        "credential_proposal" : {
          "$ref" : "#/definitions/CredentialPreview"
        },
        "issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Credential issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_id" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0",
          "description" : "Schema identifier",
          "pattern" : "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        },
        "schema_issuer_did" : {
          "type" : "string",
          "example" : "WgWxqztrNooG92RXvxSTWv",
          "description" : "Schema issuer DID",
          "pattern" : "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        },
        "schema_name" : {
          "type" : "string",
          "example" : "preferences",
          "description" : "Schema name"
        },
        "schema_version" : {
          "type" : "string",
          "example" : "1.0",
          "description" : "Schema version",
          "pattern" : "^[0-9.]+$"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10CredentialStoreRequest" : {
      "type" : "object",
      "properties" : {
        "credential_id" : {
          "type" : "string"
        }
      }
    },
    "V10PresentationCreateRequestRequest" : {
      "type" : "object",
      "required" : [ "proof_request" ],
      "properties" : {
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "proof_request" : {
          "$ref" : "#/definitions/IndyProofRequest"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationExchange" : {
      "type" : "object",
      "properties" : {
        "auto_present" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Prover choice to auto-present proof as verifier requests"
        },
        "connection_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "created_at" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Time of record creation",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "error_msg" : {
          "type" : "string",
          "example" : "Invalid structure",
          "description" : "Error message"
        },
        "initiator" : {
          "type" : "string",
          "example" : "self",
          "description" : "Present-proof exchange initiator: self or external",
          "enum" : [ "self", "external" ]
        },
        "presentation" : {
          "type" : "object",
          "description" : "(Indy) presentation (also known as proof)",
          "properties" : { }
        },
        "presentation_exchange_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Presentation exchange identifier"
        },
        "presentation_proposal_dict" : {
          "type" : "object",
          "description" : "Serialized presentation proposal message",
          "properties" : { }
        },
        "presentation_request" : {
          "type" : "object",
          "description" : "(Indy) presentation request (also known as proof request)",
          "properties" : { }
        },
        "presentation_request_dict" : {
          "type" : "object",
          "description" : "Serialized presentation request message",
          "properties" : { }
        },
        "role" : {
          "type" : "string",
          "example" : "prover",
          "description" : "Present-proof exchange role: prover or verifier",
          "enum" : [ "prover", "verifier" ]
        },
        "state" : {
          "type" : "string",
          "example" : "verified",
          "description" : "Present-proof exchange state"
        },
        "thread_id" : {
          "type" : "string",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Thread identifier"
        },
        "trace" : {
          "type" : "boolean",
          "description" : "Record trace information, based on agent configuration"
        },
        "updated_at" : {
          "type" : "string",
          "example" : "2020-11-09 04:44:47Z",
          "description" : "Time of last record update",
          "pattern" : "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        },
        "verified" : {
          "type" : "string",
          "example" : "true",
          "description" : "Whether presentation is verified: true or false",
          "enum" : [ "true", "false" ]
        }
      }
    },
    "V10PresentationExchangeList" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "Aries RFC 37 v1.0 presentation exchange records",
          "items" : {
            "$ref" : "#/definitions/V10PresentationExchange"
          }
        }
      }
    },
    "V10PresentationProposalRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "presentation_proposal" ],
      "properties" : {
        "auto_present" : {
          "type" : "boolean",
          "description" : "Whether to respond automatically to presentation requests, building and presenting requested proof"
        },
        "comment" : {
          "type" : "string",
          "description" : "Human-readable comment",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "presentation_proposal" : {
          "$ref" : "#/definitions/PresentationPreview"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationRequest" : {
      "type" : "object",
      "required" : [ "requested_attributes", "requested_predicates", "self_attested_attributes" ],
      "properties" : {
        "requested_attributes" : {
          "type" : "object",
          "description" : "Nested object mapping proof request attribute referents to requested-attribute specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyRequestedCredsRequestedAttr"
          }
        },
        "requested_predicates" : {
          "type" : "object",
          "description" : "Nested object mapping proof request predicate referents to requested-predicate specifiers",
          "additionalProperties" : {
            "$ref" : "#/definitions/IndyRequestedCredsRequestedPred"
          }
        },
        "self_attested_attributes" : {
          "type" : "object",
          "description" : "Self-attested attributes to build into proof",
          "additionalProperties" : {
            "type" : "string",
            "example" : "self_attested_value",
            "description" : "Self-attested attribute values to use in requested-credentials structure for proof construction"
          }
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "V10PresentationSendRequestRequest" : {
      "type" : "object",
      "required" : [ "connection_id", "proof_request" ],
      "properties" : {
        "comment" : {
          "type" : "string",
          "x-nullable" : true
        },
        "connection_id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "description" : "Connection identifier"
        },
        "proof_request" : {
          "$ref" : "#/definitions/IndyProofRequest"
        },
        "trace" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether to trace event (default false)"
        }
      }
    },
    "AttachDecoratorData_jws" : {
      "type" : "object",
      "description" : "Detached Java Web Signature"
    },
    "SendMenu_menu" : {
      "type" : "object",
      "description" : "Menu to send to connection"
    }
  }
}